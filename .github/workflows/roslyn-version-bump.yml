name: Automated Roslyn Version Bump

on:
  workflow_dispatch:
jobs:
  bump-roslyn:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Ensure .config directory exists
        run: mkdir -p .config

      - name: Create tool manifest if needed
        run: |
          if [ ! -f .config/dotnet-tools.json ]; then
            dotnet new tool-manifest --output .config
          fi

      - name: Install Microsoft.RoslynTools
        working-directory: .config
        run: |
          dotnet tool install Microsoft.RoslynTools --prerelease --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json

      - name: Log directory structure after tool install
        run: |
          echo "Root directory after tool install:"
          pwd
          ls -l
          echo ".config directory:"
          ls -l .config

      - name: Load last Roslyn SHA
        id: load_sha
        run: |
          if [ -f .github/roslyn-last-sha.txt ]; then
            echo "last_sha=$(cat .github/roslyn-last-sha.txt)" >> $GITHUB_OUTPUT
          else
            echo "last_sha=0000000000000000000000000000000000000000" >> $GITHUB_OUTPUT
          fi

      - name: Get latest Roslyn SHA
        id: get_latest_sha
        run: |
          git clone --depth 1 https://github.com/dotnet/roslyn.git roslyn-temp
          echo "Root directory after git clone:"
          pwd
          ls -l
          echo "roslyn-temp directory:"
          ls -l roslyn-temp
          cd roslyn-temp
          echo "latest_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Check if update needed
        id: check_update
        run: |
          if [ "${{ steps.load_sha.outputs.last_sha }}" = "${{ steps.get_latest_sha.outputs.latest_sha }}" ]; then
            echo "update_needed=false" >> $GITHUB_OUTPUT
          else
            echo "update_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Log directory structure before running pr-finder
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          echo "Root directory before running pr-finder:"
          pwd
          ls -l
          echo ".config/dotnet-tools directory:"
          ls -l .config/dotnet-tools
          echo "roslyn-temp directory:"
          ls -l roslyn-temp

      - name: Run pr-finder
        if: steps.check_update.outputs.update_needed == 'true'
        env:
          LAST_SHA: ${{ steps.load_sha.outputs.last_sha }}
          LATEST_SHA: ${{ steps.get_latest_sha.outputs.latest_sha }}
        working-directory: .config
        run: |
          dotnet tool run roslyn-tools pr-finder \
            -s $LAST_SHA \
            -e $LATEST_SHA \
            --label changelog-worthy \
            --format changelog > ../changelog.txt

      - name: Update CHANGELOG.md
        if: steps.check_update.outputs.update_needed == 'true'
        env:
          LATEST_SHA: ${{ steps.get_latest_sha.outputs.latest_sha }}
        run: |
          echo "* Bump Roslyn to $LATEST_SHA" > header.txt
          cat header.txt changelog.txt CHANGELOG.md > updated.md
          mv updated.md CHANGELOG.md

      - name: Update package.json
        if: steps.check_update.outputs.update_needed == 'true'
        env:
          LATEST_SHA: ${{ steps.get_latest_sha.outputs.latest_sha }}
        run: |
          jq --arg sha "$LATEST_SHA" '.defaults.roslyn = $sha' package.json > tmp.json && mv tmp.json package.json

      - name: Run CI validation
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          npm install
          npm test

      - name: Commit changes
        if: steps.check_update.outputs.update_needed == 'true'
        env:
          LATEST_SHA: ${{ steps.get_latest_sha.outputs.latest_sha }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b roslyn-auto-update
          git add CHANGELOG.md package.json
          git commit -m "Automated Roslyn version bump to $LATEST_SHA"

      - name: Create Pull Request
        if: steps.check_update.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Automated Roslyn Version Bump"
          body: |
            This PR updates the Roslyn version to `${{ steps.get_latest_sha.outputs.latest_sha }}` and includes changelog entries from PRs labeled `changelog-worthy`.
          branch: roslyn-auto-update
          commit-message: "Automated Roslyn version bump to ${{ steps.get_latest_sha.outputs.latest_sha }}"

      - name: Save latest SHA
        if: steps.check_update.outputs.update_needed == 'true'
        env:
          LATEST_SHA: ${{ steps.get_latest_sha.outputs.latest_sha }}
        run: echo "$LATEST_SHA" > .github/roslyn-last-sha.txt